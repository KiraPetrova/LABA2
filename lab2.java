import java.io.PrintStream;
import java.util.Scanner;
public class lab2 {
    public static Scanner in = new Scanner(System.in);
    public static PrintStream out = System.out;

    public static void main(String[] args) {
        out.print("Введите число N (длину массива)"); // Выводим на экран фразу для ввода с клавиатуры
        int N = in.nextInt(); // Присваиваем целочисленной переменной X введенное с клавиатуры значение

        int[] a = new int[N]; // Создаем одномерный массив a для типа данных int

        out.print("Введите N чисел через пробел (элементы массива)"); // Выводим на экран фразу для ввода с клавиатуры
        for (int i = 0; i < a.length; i++) { // Бежим по массиву a
            a[i] = in.nextInt(); // Присваиваем ячейкам массива введенные с клавиатуры значения
        }

        int k = 0; // Присваиваем целочисленной переменной k значение 0 (нужна для подстановки в начало массива в дальнбежейшей подпрограмме)

        for (int i = 0; i < a.length; i++) { // Бежим по массиву a
            int a1=1; // Присваиваем целочисленной переменной a1 значение 1 (1 число из последовательности Фибоначчи)
            int a2=1; // Присваиваем целочисленной переменной a2 значение 1 (2 число из последовательности Фибоначчи)
            int s=0; // Присваиваем целочисленной переменной s значение 0 (переменная для числа Фибоначчи)
            while (s<a[i]) { // Заводим цикл while в котором будем увеличивать переменную s, чтобы получить ближайшее число Фибоначчи к текущей переменной из списка
                s=a1+a2; // Увеличиваем переменную s
                a1=a2; // Присваиваем переменной a1 значение переменной a2
                a2=s; // Присваиваем переменной a1 значение переменной s
            }
            if((s==a[i] || a[i]==1)&& s!=0){  // Проверяем является ли полученное ближайшее число Фибоначчи к текущей переменной из списка самим этим элементом
                int d=a[k];  // Присваиваем целочисленной переменной d значение переменной a[k] (то есть значение первого элемента из списка)
                a[k]=a[i];  // Присваиваем переменной a[k] значение переменной a[i] (найденное число Фибоначчи)
                a[i]=d;  // Присваиваем переменной a[i] значение переменной d (можно сказать, что мы просто меняем местами значения этих переменных)
                k++;  // Увеличиваем счетчик k
            }
        }

        // Сортировка методом "Пузырька" по возрастанию (для чисел Фибоначчи)
        for (int j = 1; j < k; j++) { // Заводим цикл for для j, чтобы шла проверка без предыдущего найденного наибольшего элемента
            for (int i = 0; i < k-j; i++) { // Заводим цикл for для i, чтобы шла проверка без предыдущего найденного наибольшего элемента
                if(a[i]>a[i+1]){ // Заводим условие "Если текущий элемент массива больше следующего"
                    int z=a[i]; // Присваиваем переменной z значение переменной a[i]
                    a[i]=a[i+1]; // Присваиваем переменной a[i] значение переменной a[i+1]
                    a[i+1]=z; // Присваиваем переменной a[i+1] значение переменной z
                }
            }
        }

        // Сортировка методом "Пузырька" по возрастанию с конца (для чисел, не входящих в последовательность Фибоначчи)
        for (int j = 1; j < a.length; j++) { // Заводим цикл for для j, чтобы шла проверка без предыдущего найденного наибольшего элемента
            for (int i = k; i < a.length-j; i++) { // Заводим цикл for для i, чтобы шла проверка без предыдущего найденного наибольшего элемента
                if(a[i]<a[i+1]){ // Заводим условие "Если текущий элемент массива больше следующего"
                    int z=a[i]; // Присваиваем переменной z значение переменной a[i]
                    a[i]=a[i+1]; // Присваиваем переменной a[i] значение переменной a[i+1]
                    a[i+1]=z; // Присваиваем переменной a[i+1] значение переменной z
                }
            }
        }

        for (int i = 0; i < a.length; i++) { // Бежим по массиву a
            out.print(a[i] + " "); // Выводим текущее значение элемента массива
        }
        out.println(); // Переход на новую строчку для вывода ответа на следующий пункт задания






        int count = 0; // Присваиваем целочисленной переменной k значение 0 (будем подсчитывать количество чисел Фибоначчи)

        for (int i = 0; i < a.length; i++) { // Бежим по массиву a
            int a1=1; // Присваиваем целочисленной переменной a1 значение 1 (1 число из последовательности Фибоначчи)
            int a2=1; // Присваиваем целочисленной переменной a2 значение 1 (2 число из последовательности Фибоначчи)
            int s=0; // Присваиваем целочисленной переменной s значение 0 (переменная для числа Фибоначчи)
            while (s<a[i]) { // Заводим цикл while в котором будем увеличивать переменную s, чтобы получить ближайшее число Фибоначчи к текущей переменной из списка
                s=a1+a2; // Увеличиваем переменную s
                a1=a2; // Присваиваем переменной a1 значение переменной a2
                a2=s; // Присваиваем переменной a1 значение переменной s
            }
            if((s==a[i] || a[i]==1)&& s!=0){  // Проверяем является ли полученное ближайшее число Фибоначчи к текущей переменной из списка самим этим элементом
                count++;  // Увеличиваем счетчик k
            }
        }

        out.println(count); // Выводим переменную k (количество чисел Фибоначчи)








        for (int i = 0; i < a.length; i++) { // Бежим по массиву a
            if(i<count){ // Заводим условие "Если номер текущего элемента массива меньше количества чисел Фибоначчи" (то есть что номер элемента это номер элемента, значение которого является числом Фибоначчи)
                out.print(i); // Выводим номер элемента массива
            }
            else{  // Иначе
                out.print(-1);  // Выводим "-1"
            }
        }
        out.println(); // Переход на новую строчку для вывода ответа на следующий пункт задания




        for (int i = 0; i < a.length; i++) { // Бежим по массиву a
            int su=0; // Присваиваем целочисленной переменной su значение 0 (будем подсчитывать сумму четных цифр текущего элемента)
            while (a[i]>0){ // Заводим цикл while, чтобы шла проверка, что текущий элемент массива больше 0
                if((a[i]%10)%2==0){ // Заводим условие if "Если последняя цифра текущего элемента массива четная"
                    su+=a[i]%10; // Прибавляем в значение переменной su последнюю цифру
                }
                else{ // Иначе
                    su+=0; // Прибавляем в значение переменной su 0 (нейтральный элемент к сложению)
                }
                a[i]=a[i]/10; // Присваиваем текущей переменной значение ее же, но без последней цифры
            }
            a[i]=su; // Присваиваем текущей переменной значение su
        }
        for (int i = 0; i < a.length; i++) { // Бежим по массиву a
            out.print(a[i] + " "); // Выводим текущее значение элемента массива
        }
    }
}
